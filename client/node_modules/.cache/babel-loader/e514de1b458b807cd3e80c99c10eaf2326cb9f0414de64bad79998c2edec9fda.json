{"ast":null,"code":"// import React, { useState } from 'react';\n// import { api } from '../lib/api';\n// import { toast } from 'react-hot-toast';\n// import './AddProduct.css';\n\n// const AddProduct = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     description: '',\n//     price: '0.00',\n//     stock: '1',\n//     category: {\n//       main: 'Electronics',\n//       sub: ''\n//     },\n//     image: null\n//   });\n//   const [imagePreview, setImagePreview] = useState('');\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleMainCategoryChange = (e) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       category: {\n//         ...prev.category,\n//         main: e.target.value\n//       }\n//     }));\n//   };\n\n//   const handleSubCategoryChange = (e) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       category: {\n//         ...prev.category,\n//         sub: e.target.value\n//       }\n//     }));\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       setFormData(prev => ({ ...prev, image: file }));\n//       const reader = new FileReader();\n//       reader.onloadend = () => {\n//         setImagePreview(reader.result);\n//       };\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!formData.category.main) {\n//       toast.error('Veuillez sélectionner une catégorie principale');\n//       return;\n//     }\n//     if (!formData.category.sub) {\n//       toast.error('Veuillez entrer une sous-catégorie');\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const productToCreate = {\n//         name: formData.name,\n//         description: formData.description,\n//         price: parseFloat(formData.price),\n//         stock: parseInt(formData.stock),\n//         category: {\n//           main: formData.category.main,\n//           sub: formData.category.sub\n//         }\n//       };\n\n//       if (formData.image) {\n//         const formDataWithImage = new FormData();\n//         formDataWithImage.append('image', formData.image);\n//         const uploadResponse = await api.products.uploadImage(formDataWithImage);\n//         productToCreate.imageUrl = uploadResponse.imageUrl;\n//       }\n\n//       console.log('Données à envoyer:', productToCreate);\n//       const response = await api.products.create(productToCreate);\n//       console.log('Réponse du serveur:', response);\n\n//       toast.success('Produit ajouté avec succès');\n\n//       // Reset form\n//       setFormData({\n//         name: '',\n//         description: '',\n//         price: '0.00',\n//         stock: '1',\n//         category: {\n//           main: 'Electronics',\n//           sub: ''\n//         },\n//         image: null\n//       });\n//       setImagePreview('');\n//     } catch (error) {\n//       console.error('Erreur:', error);\n//       toast.error(error.response?.data?.message || 'Erreur lors de l\\'ajout du produit');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"add-product-container\">\n//       <h2>Ajouter un nouveau produit</h2>\n//       <form onSubmit={handleSubmit} className=\"add-product-form\">\n//         <div className=\"form-group\">\n//           <label>Nom du produit</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Description</label>\n//           <textarea\n//             name=\"description\"\n//             value={formData.description}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Prix (dt)</label>\n//           <input\n//             type=\"number\"\n//             name=\"price\"\n//             value={formData.price}\n//             onChange={handleInputChange}\n//             step=\"0.01\"\n//             min=\"0\"\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Stock</label>\n//           <input\n//             type=\"number\"\n//             name=\"stock\"\n//             value={formData.stock}\n//             onChange={handleInputChange}\n//             min=\"0\"\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Catégorie principale</label>\n//           <select\n//             value={formData.category.main}\n//             onChange={handleMainCategoryChange}\n//             required\n//           >\n//             <option value=\"\">Sélectionnez une catégorie</option>\n//             <option value=\"Electronics\">Électronique</option>\n//             <option value=\"Clothing\">Vêtements</option>\n//             <option value=\"Books\">Livres</option>\n//             <option value=\"Sports\">Sports</option>\n//             <option value=\"Home\">Maison</option>\n//             <option value=\"Other\">Autre</option>\n//           </select>\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Sous-catégorie</label>\n//           <input\n//             type=\"text\"\n//             value={formData.category.sub}\n//             onChange={handleSubCategoryChange}\n//             required\n//             placeholder=\"Entrez une sous-catégorie\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Image</label>\n//           <input\n//             type=\"file\"\n//             onChange={handleImageChange}\n//             accept=\"image/*\"\n//           />\n//           {imagePreview && (\n//             <img\n//               src={imagePreview}\n//               alt=\"Aperçu\"\n//               className=\"image-preview\"\n//             />\n//           )}\n//         </div>\n\n//         <button type=\"submit\" disabled={loading}>\n//           {loading ? 'Ajout en cours...' : 'Ajouter le produit'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddProduct;","map":{"version":3,"names":[],"sources":["C:/Users/admin/Desktop/bd-main/client/src/pages/AddProduct.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { api } from '../lib/api';\n// import { toast } from 'react-hot-toast';\n// import './AddProduct.css';\n\n// const AddProduct = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     description: '',\n//     price: '0.00',\n//     stock: '1',\n//     category: {\n//       main: 'Electronics',\n//       sub: ''\n//     },\n//     image: null\n//   });\n//   const [imagePreview, setImagePreview] = useState('');\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleMainCategoryChange = (e) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       category: {\n//         ...prev.category,\n//         main: e.target.value\n//       }\n//     }));\n//   };\n\n//   const handleSubCategoryChange = (e) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       category: {\n//         ...prev.category,\n//         sub: e.target.value\n//       }\n//     }));\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       setFormData(prev => ({ ...prev, image: file }));\n//       const reader = new FileReader();\n//       reader.onloadend = () => {\n//         setImagePreview(reader.result);\n//       };\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!formData.category.main) {\n//       toast.error('Veuillez sélectionner une catégorie principale');\n//       return;\n//     }\n//     if (!formData.category.sub) {\n//       toast.error('Veuillez entrer une sous-catégorie');\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const productToCreate = {\n//         name: formData.name,\n//         description: formData.description,\n//         price: parseFloat(formData.price),\n//         stock: parseInt(formData.stock),\n//         category: {\n//           main: formData.category.main,\n//           sub: formData.category.sub\n//         }\n//       };\n\n//       if (formData.image) {\n//         const formDataWithImage = new FormData();\n//         formDataWithImage.append('image', formData.image);\n//         const uploadResponse = await api.products.uploadImage(formDataWithImage);\n//         productToCreate.imageUrl = uploadResponse.imageUrl;\n//       }\n\n//       console.log('Données à envoyer:', productToCreate);\n//       const response = await api.products.create(productToCreate);\n//       console.log('Réponse du serveur:', response);\n\n//       toast.success('Produit ajouté avec succès');\n      \n//       // Reset form\n//       setFormData({\n//         name: '',\n//         description: '',\n//         price: '0.00',\n//         stock: '1',\n//         category: {\n//           main: 'Electronics',\n//           sub: ''\n//         },\n//         image: null\n//       });\n//       setImagePreview('');\n//     } catch (error) {\n//       console.error('Erreur:', error);\n//       toast.error(error.response?.data?.message || 'Erreur lors de l\\'ajout du produit');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"add-product-container\">\n//       <h2>Ajouter un nouveau produit</h2>\n//       <form onSubmit={handleSubmit} className=\"add-product-form\">\n//         <div className=\"form-group\">\n//           <label>Nom du produit</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Description</label>\n//           <textarea\n//             name=\"description\"\n//             value={formData.description}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Prix (dt)</label>\n//           <input\n//             type=\"number\"\n//             name=\"price\"\n//             value={formData.price}\n//             onChange={handleInputChange}\n//             step=\"0.01\"\n//             min=\"0\"\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Stock</label>\n//           <input\n//             type=\"number\"\n//             name=\"stock\"\n//             value={formData.stock}\n//             onChange={handleInputChange}\n//             min=\"0\"\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Catégorie principale</label>\n//           <select\n//             value={formData.category.main}\n//             onChange={handleMainCategoryChange}\n//             required\n//           >\n//             <option value=\"\">Sélectionnez une catégorie</option>\n//             <option value=\"Electronics\">Électronique</option>\n//             <option value=\"Clothing\">Vêtements</option>\n//             <option value=\"Books\">Livres</option>\n//             <option value=\"Sports\">Sports</option>\n//             <option value=\"Home\">Maison</option>\n//             <option value=\"Other\">Autre</option>\n//           </select>\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Sous-catégorie</label>\n//           <input\n//             type=\"text\"\n//             value={formData.category.sub}\n//             onChange={handleSubCategoryChange}\n//             required\n//             placeholder=\"Entrez une sous-catégorie\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Image</label>\n//           <input\n//             type=\"file\"\n//             onChange={handleImageChange}\n//             accept=\"image/*\"\n//           />\n//           {imagePreview && (\n//             <img\n//               src={imagePreview}\n//               alt=\"Aperçu\"\n//               className=\"image-preview\"\n//             />\n//           )}\n//         </div>\n\n//         <button type=\"submit\" disabled={loading}>\n//           {loading ? 'Ajout en cours...' : 'Ajouter le produit'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddProduct;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}