{"ast":null,"code":"import { create } from 'zustand';\nexport const useCartStore = create((set, get) => ({\n  items: [],\n  total: 0,\n  addItem: product => {\n    set(state => {\n      const existingItem = state.items.find(item => item.product.id === product.id);\n      if (existingItem) {\n        const updatedItems = state.items.map(item => item.product.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n        return {\n          items: updatedItems,\n          total: calculateTotal(updatedItems)\n        };\n      }\n      const newItems = [...state.items, {\n        product,\n        quantity: 1\n      }];\n      return {\n        items: newItems,\n        total: calculateTotal(newItems)\n      };\n    });\n  },\n  removeItem: productId => {\n    set(state => {\n      const updatedItems = state.items.filter(item => item.product.id !== productId);\n      return {\n        items: updatedItems,\n        total: calculateTotal(updatedItems)\n      };\n    });\n  },\n  updateQuantity: (productId, quantity) => {\n    set(state => {\n      if (quantity === 0) {\n        return get().removeItem(productId);\n      }\n      const updatedItems = state.items.map(item => item.product.id === productId ? {\n        ...item,\n        quantity\n      } : item);\n      return {\n        items: updatedItems,\n        total: calculateTotal(updatedItems)\n      };\n    });\n  },\n  clearCart: () => {\n    set({\n      items: [],\n      total: 0\n    });\n  }\n}));\nconst calculateTotal = items => {\n  return items.reduce((total, item) => total + item.product.price * item.quantity, 0);\n};","map":{"version":3,"names":["create","useCartStore","set","get","items","total","addItem","product","state","existingItem","find","item","id","updatedItems","map","quantity","calculateTotal","newItems","removeItem","productId","filter","updateQuantity","clearCart","reduce","price"],"sources":["C:/Users/admin/Desktop/bd-main/client/src/lib/store.js"],"sourcesContent":["import { create } from 'zustand';\n\nexport const useCartStore = create((set, get) => ({\n  items: [],\n  total: 0,\n\n  addItem: (product) => {\n    set((state) => {\n      const existingItem = state.items.find((item) => item.product.id === product.id);\n\n      if (existingItem) {\n        const updatedItems = state.items.map((item) =>\n          item.product.id === product.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n        return {\n          items: updatedItems,\n          total: calculateTotal(updatedItems),\n        };\n      }\n\n      const newItems = [...state.items, { product, quantity: 1 }];\n      return {\n        items: newItems,\n        total: calculateTotal(newItems),\n      };\n    });\n  },\n\n  removeItem: (productId) => {\n    set((state) => {\n      const updatedItems = state.items.filter((item) => item.product.id !== productId);\n      return {\n        items: updatedItems,\n        total: calculateTotal(updatedItems),\n      };\n    });\n  },\n\n  updateQuantity: (productId, quantity) => {\n    set((state) => {\n      if (quantity === 0) {\n        return get().removeItem(productId);\n      }\n\n      const updatedItems = state.items.map((item) =>\n        item.product.id === productId ? { ...item, quantity } : item\n      );\n\n      return {\n        items: updatedItems,\n        total: calculateTotal(updatedItems),\n      };\n    });\n  },\n\n  clearCart: () => {\n    set({ items: [], total: 0 });\n  },\n}));\n\nconst calculateTotal = (items) => {\n  return items.reduce((total, item) => total + item.product.price * item.quantity, 0);\n};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,OAAO,MAAMC,YAAY,GAAGD,MAAM,CAAC,CAACE,GAAG,EAAEC,GAAG,MAAM;EAChDC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,CAAC;EAERC,OAAO,EAAGC,OAAO,IAAK;IACpBL,GAAG,CAAEM,KAAK,IAAK;MACb,MAAMC,YAAY,GAAGD,KAAK,CAACJ,KAAK,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAE/E,IAAIH,YAAY,EAAE;QAChB,MAAMI,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,GAAG,CAAEH,IAAI,IACxCA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKL,OAAO,CAACK,EAAE,GAC1B;UAAE,GAAGD,IAAI;UAAEI,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,GAAG;QAAE,CAAC,GACxCJ,IACN,CAAC;QACD,OAAO;UACLP,KAAK,EAAES,YAAY;UACnBR,KAAK,EAAEW,cAAc,CAACH,YAAY;QACpC,CAAC;MACH;MAEA,MAAMI,QAAQ,GAAG,CAAC,GAAGT,KAAK,CAACJ,KAAK,EAAE;QAAEG,OAAO;QAAEQ,QAAQ,EAAE;MAAE,CAAC,CAAC;MAC3D,OAAO;QACLX,KAAK,EAAEa,QAAQ;QACfZ,KAAK,EAAEW,cAAc,CAACC,QAAQ;MAChC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAEDC,UAAU,EAAGC,SAAS,IAAK;IACzBjB,GAAG,CAAEM,KAAK,IAAK;MACb,MAAMK,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACgB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKO,SAAS,CAAC;MAChF,OAAO;QACLf,KAAK,EAAES,YAAY;QACnBR,KAAK,EAAEW,cAAc,CAACH,YAAY;MACpC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAEDQ,cAAc,EAAEA,CAACF,SAAS,EAAEJ,QAAQ,KAAK;IACvCb,GAAG,CAAEM,KAAK,IAAK;MACb,IAAIO,QAAQ,KAAK,CAAC,EAAE;QAClB,OAAOZ,GAAG,CAAC,CAAC,CAACe,UAAU,CAACC,SAAS,CAAC;MACpC;MAEA,MAAMN,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,GAAG,CAAEH,IAAI,IACxCA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKO,SAAS,GAAG;QAAE,GAAGR,IAAI;QAAEI;MAAS,CAAC,GAAGJ,IAC1D,CAAC;MAED,OAAO;QACLP,KAAK,EAAES,YAAY;QACnBR,KAAK,EAAEW,cAAc,CAACH,YAAY;MACpC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAEDS,SAAS,EAAEA,CAAA,KAAM;IACfpB,GAAG,CAAC;MAAEE,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAC,CAAC;EAC9B;AACF,CAAC,CAAC,CAAC;AAEH,MAAMW,cAAc,GAAIZ,KAAK,IAAK;EAChC,OAAOA,KAAK,CAACmB,MAAM,CAAC,CAAClB,KAAK,EAAEM,IAAI,KAAKN,KAAK,GAAGM,IAAI,CAACJ,OAAO,CAACiB,KAAK,GAAGb,IAAI,CAACI,QAAQ,EAAE,CAAC,CAAC;AACrF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}